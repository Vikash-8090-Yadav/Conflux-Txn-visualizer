"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/transaction-sender.tsx":
/*!*******************************************!*\
  !*** ./components/transaction-sender.tsx ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TransactionSender: () => (/* binding */ TransactionSender)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/components/ui/button */ \"(app-pages-browser)/./components/ui/button.tsx\");\n/* harmony import */ var _components_ui_card__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/components/ui/card */ \"(app-pages-browser)/./components/ui/card.tsx\");\n/* harmony import */ var _components_ui_input__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/components/ui/input */ \"(app-pages-browser)/./components/ui/input.tsx\");\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! framer-motion */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs\");\n/* harmony import */ var _components_tooltip__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/components/tooltip */ \"(app-pages-browser)/./components/tooltip.tsx\");\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! web3 */ \"(app-pages-browser)/./node_modules/web3/lib/esm/index.js\");\n/* __next_internal_client_entry_do_not_use__ TransactionSender auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\nfunction generateTxHash() {\n    const chars = \"0123456789abcdef\";\n    let hash = \"0x\";\n    for(let i = 0; i < 64; i++){\n        hash += chars[Math.floor(Math.random() * chars.length)];\n    }\n    return hash;\n}\nfunction generateBlockHash() {\n    const chars = \"0123456789abcdef\";\n    let hash = \"0x\";\n    for(let i = 0; i < 64; i++){\n        hash += chars[Math.floor(Math.random() * chars.length)];\n    }\n    return hash;\n}\n// Function to send real transaction using Web3.js and private key\nasync function sendRealTransaction(fromAddress, privateKey, toAddress, amount, onStageUpdate) {\n    try {\n        console.log('üöÄ Sending real transaction with private key...');\n        console.log('üìç From:', fromAddress);\n        console.log('üìç To:', toAddress);\n        console.log('üí∞ Amount:', amount, 'CFX');\n        console.log('üîë Using private key:', privateKey.slice(0, 10) + '...');\n        // Initialize Web3 with Conflux eSpace testnet\n        const web3 = new web3__WEBPACK_IMPORTED_MODULE_6__.Web3('https://evmtestnet.confluxrpc.com');\n        // Create account from private key\n        const account = web3.eth.accounts.privateKeyToAccount(privateKey);\n        console.log('üîç Account derived:', account.address);\n        // Verify the account matches the from address\n        if (account.address.toLowerCase() !== fromAddress.toLowerCase()) {\n            throw new Error(\"Account mismatch: expected \".concat(fromAddress, \", got \").concat(account.address));\n        }\n        // Add the account to Web3 wallet\n        web3.eth.accounts.wallet.add(account);\n        web3.eth.defaultAccount = account.address;\n        // Convert CFX to Wei\n        const amountInWei = web3.utils.toWei(amount, 'ether');\n        console.log('‚úÖ Amount in Wei:', amountInWei);\n        // Get current gas price\n        const gasPrice = await web3.eth.getGasPrice();\n        console.log('‚õΩ Gas Price:', gasPrice);\n        // Create transaction object\n        const transactionObject = {\n            from: fromAddress,\n            to: toAddress,\n            value: amountInWei,\n            gas: 21000,\n            gasPrice: gasPrice\n        };\n        console.log('üìù Transaction Object:', transactionObject);\n        // Stage 1: Created\n        onStageUpdate(\"created\", {\n            from: fromAddress,\n            to: toAddress,\n            value: amount\n        });\n        await new Promise((resolve)=>setTimeout(resolve, 500));\n        // Stage 2: Signed (transaction is signed internally by Web3)\n        onStageUpdate(\"signed\", {\n            from: fromAddress,\n            to: toAddress,\n            value: amount,\n            nonce: await web3.eth.getTransactionCount(fromAddress),\n            gas: \"21000\",\n            gasPrice: web3.utils.fromWei(gasPrice, 'ether')\n        });\n        await new Promise((resolve)=>setTimeout(resolve, 500));\n        // Send the transaction\n        console.log('üöÄ Broadcasting transaction...');\n        const txHash = await web3.eth.sendTransaction(transactionObject);\n        console.log('‚úÖ Transaction sent successfully!');\n        console.log('üìã Transaction Hash:', txHash.transactionHash);\n        // Stage 3: Broadcasted\n        onStageUpdate(\"broadcasted\", {\n            hash: txHash.transactionHash,\n            from: fromAddress,\n            to: toAddress,\n            value: amount,\n            nonce: await web3.eth.getTransactionCount(fromAddress),\n            gas: \"21000\",\n            gasPrice: web3.utils.fromWei(gasPrice, 'ether')\n        });\n        // Stage 4: Pending\n        onStageUpdate(\"pending\", {\n            hash: txHash.transactionHash\n        });\n        // Wait for transaction to be mined (using correct Web3.js method)\n        console.log('‚è≥ Waiting for transaction to be mined...');\n        // Use getTransactionReceipt in a loop to wait for confirmation\n        let receipt = null;\n        let attempts = 0;\n        const maxAttempts = 30 // Wait up to 30 seconds\n        ;\n        while(!receipt && attempts < maxAttempts){\n            try {\n                receipt = await web3.eth.getTransactionReceipt(txHash.transactionHash);\n                if (receipt) {\n                    console.log('‚úÖ Transaction mined!');\n                    console.log('üìã Receipt:', receipt);\n                    break;\n                }\n            } catch (error) {\n            // Receipt not found yet, continue waiting\n            }\n            // Wait 1 second before next attempt\n            await new Promise((resolve)=>setTimeout(resolve, 1000));\n            attempts++;\n            console.log(\"‚è≥ Waiting for confirmation... (\".concat(attempts, \"/\").concat(maxAttempts, \")\"));\n        }\n        if (!receipt) {\n            console.log('‚ö†Ô∏è Transaction sent but confirmation timeout. Hash:', txHash.transactionHash);\n        // Don't throw error, transaction was sent successfully\n        }\n        // Stage 5: Included\n        if (receipt) {\n            onStageUpdate(\"included\", {\n                blockNumber: receipt.blockNumber,\n                blockHash: receipt.blockHash,\n                timestamp: Date.now()\n            });\n            // Stage 6: Confirmed\n            onStageUpdate(\"confirmed\", {\n                status: receipt.status === 1 ? 0 : 1,\n                gasUsed: receipt.gasUsed,\n                logs: receipt.logs\n            });\n        } else {\n            // If no receipt after timeout, still mark as confirmed (transaction was sent)\n            onStageUpdate(\"included\", {\n                blockNumber: 0,\n                blockHash: \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n                timestamp: Date.now()\n            });\n            onStageUpdate(\"confirmed\", {\n                status: 0,\n                gasUsed: \"21000\",\n                logs: []\n            });\n        }\n        return txHash.transactionHash;\n    } catch (error) {\n        console.error('‚ùå Error sending real transaction:', error);\n        throw error;\n    }\n}\nfunction TransactionSender(param) {\n    let { walletAddress, privateKey, balance, onTransactionUpdate, onReset, currentStage, onBalanceUpdate } = param;\n    _s();\n    const [recipient, setRecipient] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [amount, setAmount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [sending, setSending] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const sendTransaction = async ()=>{\n        if (!recipient || !amount) {\n            setError(\"Please fill in all fields\");\n            return;\n        }\n        // Validate recipient address format\n        if (!recipient.startsWith('0x') || recipient.length !== 42) {\n            setError(\"Please enter a valid recipient address (0x... with 40 hex characters)\");\n            return;\n        }\n        if (Number.parseFloat(amount) <= 0) {\n            setError(\"Amount must be greater than 0\");\n            return;\n        }\n        // Check if amount exceeds available balance (including gas fees)\n        const availableBalance = Number.parseFloat(balance);\n        const sendAmount = Number.parseFloat(amount);\n        const estimatedGasFee = 0.002 // Estimated gas fee in CFX\n        ;\n        if (sendAmount + estimatedGasFee > availableBalance) {\n            setError(\"Insufficient balance. You have \".concat(balance, \" CFX but trying to send \").concat(amount, \" CFX + ~\").concat(estimatedGasFee, \" CFX gas fee\"));\n            return;\n        }\n        setError(\"\");\n        setSending(true);\n        try {\n            // Send real transaction using private key\n            console.log('üöÄ Starting real transaction with private key...');\n            const txHash = await sendRealTransaction(walletAddress, privateKey, recipient, amount, onTransactionUpdate);\n            console.log('‚úÖ Real transaction completed successfully!');\n            console.log('üìã Transaction Hash:', txHash);\n            // Update balance after successful transaction\n            if (onBalanceUpdate) {\n                const currentBalance = Number.parseFloat(balance);\n                const sendAmount = Number.parseFloat(amount);\n                const gasFee = 0.002 // Estimated gas fee\n                ;\n                const newBalance = Math.max(0, currentBalance - sendAmount - gasFee);\n                onBalanceUpdate(newBalance.toFixed(4));\n                console.log(\"\\uD83D\\uDCB0 Balance updated: \".concat(balance, \" ‚Üí \").concat(newBalance.toFixed(4), \" CFX\"));\n            }\n        } catch (err) {\n            var _err_message, _err_message1, _err_message2, _err_message3;\n            console.error(\"‚ùå Real transaction failed:\", err);\n            // Provide more helpful error messages\n            let errorMessage = err.message || \"Transaction failed\";\n            if ((_err_message = err.message) === null || _err_message === void 0 ? void 0 : _err_message.includes(\"Invalid Private Key\")) {\n                errorMessage = \"Invalid private key format. Please generate a new wallet.\";\n            } else if ((_err_message1 = err.message) === null || _err_message1 === void 0 ? void 0 : _err_message1.includes(\"insufficient funds\")) {\n                errorMessage = \"Insufficient funds for transaction. Please use the faucet to get test tokens.\";\n            } else if ((_err_message2 = err.message) === null || _err_message2 === void 0 ? void 0 : _err_message2.includes(\"Account mismatch\")) {\n                errorMessage = \"Private key doesn't match wallet address. Please generate a new wallet.\";\n            } else if ((_err_message3 = err.message) === null || _err_message3 === void 0 ? void 0 : _err_message3.includes(\"Invalid recipient address\")) {\n                errorMessage = \"Invalid recipient address format.\";\n            }\n            setError(errorMessage);\n            onTransactionUpdate(\"error\", {\n                error: errorMessage\n            });\n        } finally{\n            setSending(false);\n        }\n    };\n    const handleReset = ()=>{\n        setRecipient(\"\");\n        setAmount(\"\");\n        setError(\"\");\n        onReset();\n    };\n    const isActive = currentStage !== \"idle\" && currentStage !== \"error\";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_7__.motion.div, {\n        initial: {\n            opacity: 0,\n            y: 20\n        },\n        animate: {\n            opacity: 1,\n            y: 0\n        },\n        transition: {\n            delay: 0.1\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_3__.Card, {\n            className: \"p-6 bg-card border-border/50\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center gap-2 mb-4\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            className: \"text-lg font-semibold\",\n                            children: \"Send Transaction\"\n                        }, void 0, false, {\n                            fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                            lineNumber: 305,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_tooltip__WEBPACK_IMPORTED_MODULE_5__.Tooltip, {\n                            content: \"Send real CFX on Conflux eSpace to another address using your private key. Watch the transaction flow through each stage in real-time.\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-4 h-4 rounded-full border border-muted-foreground/50 flex items-center justify-center text-xs text-muted-foreground cursor-help\",\n                                children: \"?\"\n                            }, void 0, false, {\n                                fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                                lineNumber: 307,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                            lineNumber: 306,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                    lineNumber: 304,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"space-y-4\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"p-3 rounded-lg bg-secondary/20 border border-border/50\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex justify-between items-center text-sm\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"text-muted-foreground\",\n                                            children: \"Available Balance:\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                                            lineNumber: 316,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"font-semibold\",\n                                            children: [\n                                                balance,\n                                                \" CFX\"\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                                            lineNumber: 317,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                                    lineNumber: 315,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex justify-between items-center text-xs text-muted-foreground mt-1\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"Estimated Gas Fee:\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                                            lineNumber: 320,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            children: \"~0.002 CFX\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                                            lineNumber: 321,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                                    lineNumber: 319,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-xs text-green-600 mt-1\",\n                                    children: \"‚úì Live balance from Conflux eSpace testnet (Real Transactions)\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                                    lineNumber: 323,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                            lineNumber: 314,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    className: \"text-sm text-muted-foreground mb-2 block\",\n                                    children: \"Recipient Address\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                                    lineNumber: 329,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_4__.Input, {\n                                    value: recipient,\n                                    onChange: (e)=>setRecipient(e.target.value),\n                                    placeholder: \"0x...\",\n                                    disabled: isActive,\n                                    className: \"font-mono text-sm\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                                    lineNumber: 330,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                            lineNumber: 328,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                    className: \"text-sm text-muted-foreground mb-2 block\",\n                                    children: \"Amount (CFX)\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                                    lineNumber: 340,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_input__WEBPACK_IMPORTED_MODULE_4__.Input, {\n                                    type: \"number\",\n                                    value: amount,\n                                    onChange: (e)=>setAmount(e.target.value),\n                                    placeholder: \"0.1\",\n                                    disabled: isActive,\n                                    step: \"0.01\",\n                                    min: \"0\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                                    lineNumber: 341,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                            lineNumber: 339,\n                            columnNumber: 11\n                        }, this),\n                        error && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_7__.motion.div, {\n                            initial: {\n                                opacity: 0\n                            },\n                            animate: {\n                                opacity: 1\n                            },\n                            className: \"p-3 rounded-lg bg-destructive/10 border border-destructive/50 text-destructive text-sm\",\n                            children: error\n                        }, void 0, false, {\n                            fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                            lineNumber: 353,\n                            columnNumber: 13\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex gap-3\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                    onClick: sendTransaction,\n                                    disabled: sending || isActive,\n                                    className: \"flex-1 bg-primary text-primary-foreground hover:bg-primary/90\",\n                                    children: sending ? \"Sending...\" : \"Send Transaction\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                                    lineNumber: 363,\n                                    columnNumber: 13\n                                }, this),\n                                (currentStage === \"confirmed\" || currentStage === \"error\") && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_2__.Button, {\n                                    onClick: handleReset,\n                                    variant: \"outline\",\n                                    children: \"Reset\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                                    lineNumber: 371,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                            lineNumber: 362,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-xs text-blue-600 mt-2\",\n                            children: \"\\uD83D\\uDCA1 Real blockchain transactions using your private key! Just enter recipient and amount.\"\n                        }, void 0, false, {\n                            fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                            lineNumber: 377,\n                            columnNumber: 11\n                        }, this),\n                        currentStage === \"confirmed\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_7__.motion.div, {\n                            initial: {\n                                opacity: 0,\n                                scale: 0.9\n                            },\n                            animate: {\n                                opacity: 1,\n                                scale: 1\n                            },\n                            className: \"mt-4 p-3 rounded-lg bg-green-50 border border-green-200 text-green-800 text-sm\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"font-semibold\",\n                                    children: \"\\uD83C\\uDF89 Transaction Complete!\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                                    lineNumber: 387,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"text-xs mt-1\",\n                                    children: [\n                                        amount,\n                                        \" CFX has been credited to \",\n                                        recipient.slice(0, 10),\n                                        \"...\",\n                                        recipient.slice(-8)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                                    lineNumber: 388,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                            lineNumber: 382,\n                            columnNumber: 13\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n                    lineNumber: 313,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n            lineNumber: 303,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/vikashyadav/Developer/AllgitFiles/Conflux-Txn-visualizer/components/transaction-sender.tsx\",\n        lineNumber: 302,\n        columnNumber: 5\n    }, this);\n}\n_s(TransactionSender, \"ruzySULqLCs76a9aanov6HNxhhA=\");\n_c = TransactionSender;\nvar _c;\n$RefreshReg$(_c, \"TransactionSender\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/transaction-sender.tsx\n"));

/***/ })

});